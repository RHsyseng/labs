<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Assisted Installer on Labs@Sysdeseng</title>
    <link>https://pages.sysdeseng.com/labs/tags/assisted-installer/</link>
    <description>Recent content in Assisted Installer on Labs@Sysdeseng</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://pages.sysdeseng.com/labs/tags/assisted-installer/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Assisted Installer</title>
      <link>https://pages.sysdeseng.com/labs/deploy/operator/assistedinstaller/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pages.sysdeseng.com/labs/deploy/operator/assistedinstaller/</guid>
      <description>Reference  Deploy Folder: https://github.com/RHsyseng/labs-index/tree/master/deploy-AssistedInstaller-operator External Operator ref: https://github.com/openshift/assisted-service quay.io reference tag: https://quay.io/repository/ocpmetal/assisted-service-index?tab=tags  Assisted Installer Operator Catalog Source First thing is to create the catalog source with the quay image from the Development team.
The only thing we need to change is the tag for the image using the reference url
--- apiVersion: operators.coreos.com/v1alpha1 kind: CatalogSource metadata: name: assisted-service namespace: openshift-marketplace spec: image: quay.io/ocpmetal/assisted-service-index:&amp;lt;tag from quay.io&amp;gt; sourceType: grpc  In case you want to go with the version of the Operator Hub, in the extra folder you&amp;rsquo;ve got the file assisted-installer-CS-operatorHub.</description>
    </item>
    
    <item>
      <title>Day2 with spoke cluster to add worker nodes</title>
      <link>https://pages.sysdeseng.com/labs/deploy/remoteworkernode/day2-spoke-worker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pages.sysdeseng.com/labs/deploy/remoteworkernode/day2-spoke-worker/</guid>
      <description>Requirements The starting point of this document is based on the following things installed previously:
 Hub clusters ocp ipi baremetal installed (multinode) spoke cluster multinode installed. You could use the deploy.sh script to accomplish this.  Day2 workflow to add worker nodes 1-. Deploy hub cluster (Requirements)
2-. Add bmh crs to hub clusters (in order to deploy spoke cluster multi node) (Requirements)
3-. Finish the spoke cluster installation (multinode 3 nodes)</description>
    </item>
    
    <item>
      <title>Day2 with spoke cluster to add worker nodes</title>
      <link>https://pages.sysdeseng.com/labs/deploy/remoteworkernode/rwn-using-ai-crd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pages.sysdeseng.com/labs/deploy/remoteworkernode/rwn-using-ai-crd/</guid>
      <description>Requirements The starting point of this document is based on the following things installed previously:
 Hub clusters ocp ipi baremetal installed (multinode) spoke cluster multinode installed. You could use the deploy.sh script to accomplish this.  Day2 workflow to add worker nodes 1-. Deploy hub cluster (Requirements)
2-. Add bmh crs to hub clusters (in order to deploy spoke cluster multi node) (Requirements)
3-. Finish the spoke cluster installation (multinode 3 nodes)</description>
    </item>
    
    <item>
      <title>Late Binding adding new agents</title>
      <link>https://pages.sysdeseng.com/labs/deploy/remoteworkernode/late-binding/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pages.sysdeseng.com/labs/deploy/remoteworkernode/late-binding/</guid>
      <description>Requirements The starting point of this document is based on the following things installed previously:
 Hub clusters ocp ipi baremetal installed (multinode) Hive operator installed AI installed  Create the pull secret You need to create a secret in the cluster that contains the pull secret for the registry.
apiVersion: v1 kind: Secret metadata: name: assisted-deployment-pull-secret namespace: assisted-installer stringData: .dockerconfigjson: &amp;#39;PULL_SECRET&amp;#39; # replace with your pull secret type: kubernetes.io/dockerconfigjson Create the private ssh key You need to create a secret in the cluster that contains the private ssh key for the registry.</description>
    </item>
    
    <item>
      <title>Remote Worker Node in Day2 spoke cluster to add worker nodes</title>
      <link>https://pages.sysdeseng.com/labs/deploy/remoteworkernode/rwn-to-day2-spoke-worker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pages.sysdeseng.com/labs/deploy/remoteworkernode/rwn-to-day2-spoke-worker/</guid>
      <description>Requirements The starting point of this document is based on the following things installed previously:
 Hub clusters ocp ipi baremetal installed (multinode) spoke cluster multinode installed. You could use the deploy.sh script to accomplish this.  Remote worker node into Day2 spoke cluster workflow 1-. Deploy hub cluster (Requirement)
2-. Add bmh crs to hub clusters (in order to deploy spoke cluster multi node) (Requirement)
3-. Finish the spoke cluster installation (multinode 3 nodes)</description>
    </item>
    
    <item>
      <title>RWN to Assisted Installer using AICLI API</title>
      <link>https://pages.sysdeseng.com/labs/deploy/remoteworkernode/rwn-to-ai-using-aicli-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pages.sysdeseng.com/labs/deploy/remoteworkernode/rwn-to-ai-using-aicli-api/</guid>
      <description>Reference Deploy Folder: https://github.com/RHsyseng/labs-index/tree/master/deploy-rwn-to-ai-using-aicli-api
Scenario Description Once we&amp;rsquo;ve got a 3 master cluster installed with the AI operator, this document is useful to add new remote worker nodes (maybe worker nodes using the same network)
In this case, we&amp;rsquo;ve got 2 possibilities to do that:
 Using the API or maybe an abstraction using AICLI Using the CRD operator (not developed yet)  Requirement We need an environment with:
 Hub deployment ready (UPI,IPI whatever) AI operator + Hive + LocalStorage Cluster 3 multi-node (not possible to do using SNO).</description>
    </item>
    
    <item>
      <title>Using Assisted Installer (AI)</title>
      <link>https://pages.sysdeseng.com/labs/deploy/hub-spoke/ai/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pages.sysdeseng.com/labs/deploy/hub-spoke/ai/</guid>
      <description>Reference Deploy Folder: https://github.com/RHsyseng/labs-index/tree/master/deploy-hub-spoke-over-AI To have a full reference there&amp;rsquo;s a deploy script inside the deploy folder mentioned before, with all the steps shown here.
Create the pull-secret This pull-secret will be injected into the discovery ISO, so it needs to be a valid pull-secret and be able to pull from the registries you&amp;rsquo;re going to use. If you have some doubts you could use the next tool to verify it: pull secret validator</description>
    </item>
    
    <item>
      <title>Virtual over Assisted Installer</title>
      <link>https://pages.sysdeseng.com/labs/deploy/baremetalhost/virtual-over-ai/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pages.sysdeseng.com/labs/deploy/baremetalhost/virtual-over-ai/</guid>
      <description>Reference Deploy Folder: https://github.com/RHsyseng/labs-index/tree/master/deploy-BMHost-virtual-over-AI
To have a full reference there&amp;rsquo;s a deploy script inside the deploy folder mentioned before, with all the steps shown here.
Scenario Description The main goal of this document is to explain the deployment of a baremetal host over Assisted Installer. This lab uses sushy-tools to emulate the same situation which we could found using a real Baremetal host.
Requirements  Hub cluster deployed successfully LocalStorage ready Hive operator ready Assisted Installer Operator ready  Install sushy-tools &amp;nbsp;Information If you&amp;rsquo;ve installed IPI baremetal with Kcli and virtual_protocol: Redfish -&amp;gt; you could omit this step because it is already installed.</description>
    </item>
    
  </channel>
</rss>
